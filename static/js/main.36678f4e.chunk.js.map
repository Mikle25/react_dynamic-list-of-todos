{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.js","index.js"],"names":["TodoList","todos","getUserId","sortedTodos","filterTodo","className","type","name","placeholder","onChange","target","value","map","elem","key","id","readOnly","checked","completed","title","onClick","userId","CurrentUser","email","phone","clearUser","defaultProps","getTodos","a","fetch","json","data","getUsers","users","App","state","todosFromServer","selectedUserId","person","selectUser","setState","filter","includes","then","result","this","user","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36678f4e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({\n  todos,\n  getUserId,\n  sortedTodos,\n  filterTodo,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__search\">\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"search\"\n        onChange={({ target }) => filterTodo(target.value)}\n      />\n\n      <select onChange={({ target }) => sortedTodos(target.value)}>\n        <option value=\"all\">All</option>\n        <option value=\"active\">Active</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n    </div>\n\n    <ul className=\"TodoList__list\">\n      {todos.map(elem => (\n        <li key={elem.id} className=\"TodoList__item\">\n          <label>\n            <input type=\"checkbox\" readOnly checked={elem.completed} />\n            {elem.title}\n          </label>\n          <button\n            type=\"button\"\n            onClick={() => getUserId(elem.userId)}\n          >\n            User:&nbsp;#\n            {elem.userId}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    userId: PropTypes.number,\n  }).isRequired).isRequired,\n  getUserId: PropTypes.func.isRequired,\n  sortedTodos: PropTypes.func.isRequired,\n  filterTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CurrentUser = ({ id, name, email, phone, clearUser }) => (\n  <div className=\"CurrentUser\">\n    <h2>{`Selected user: ${id}`}</h2>\n\n    <ul>\n      <li>{name}</li>\n      <li>{email}</li>\n      <li>{phone}</li>\n      <button\n        type=\"button\"\n        onClick={() => clearUser()}\n      >\n        Clear\n      </button>\n    </ul>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  email: PropTypes.string,\n  phone: PropTypes.string,\n  clearUser: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  id: 0,\n  name: '',\n  email: '',\n  phone: '',\n};\n","const TODO_API = 'https://mate-api.herokuapp.com/todos';\nconst USERS_API = 'https://mate-api.herokuapp.com/users';\n\nexport const getTodos = async() => {\n  const todos = await (await fetch(TODO_API)).json();\n\n  return todos.data;\n};\n\nexport const getUsers = async(userId) => {\n  const users = await (await fetch(`${USERS_API}/${userId}`)).json();\n\n  return users.data;\n};\n","import React from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUsers } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todosFromServer: [],\n    selectedUserId: 0,\n    person: [],\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((result) => {\n        this.setState({\n          todos: result.filter(elem => elem.title !== null),\n          todosFromServer: result.filter(elem => elem.title !== null),\n        });\n      });\n  }\n\n  componentDidUpdate() {\n    if (this.state.selectedUserId !== 0\n      && this.state.selectedUserId\n      && this.state.selectedUserId !== this.state.person.id) {\n      getUsers(this.state.selectedUserId)\n        .then((user) => {\n          this.setState({\n            person: user,\n          });\n        });\n    }\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n      person: [],\n    });\n  }\n\n  filterTodo = (target) => {\n    this.setState(state => ({\n      todos: state.todosFromServer.filter(elem => (elem.title\n        ? elem.title.includes(target)\n        : '')),\n    }));\n  }\n\n  sortedTodos = (target) => {\n    switch (target) {\n      case 'all':\n        this.setState(state => ({\n          todos: state.todosFromServer,\n        }));\n        break;\n      case 'active':\n        this.setState(state => ({\n          todos: state.todosFromServer.filter(elem => !elem.completed),\n        }));\n        break;\n      case 'completed':\n        this.setState(state => ({\n          todos: state.todosFromServer.filter(elem => elem.completed),\n        }));\n        break;\n      default:\n    }\n  }\n\n  render() {\n    const { todos, selectedUserId, person } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            getUserId={this.selectUser}\n            sortedTodos={this.sortedTodos}\n            filterTodo={this.filterTodo}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedUserId ? (\n            <CurrentUser\n              {...person}\n              clearUser={this.clearUser}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}