{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.js","index.js"],"names":["TodoList","todos","getUserId","sortedTodos","filterTodo","className","type","name","placeholder","onChange","target","value","map","elem","key","id","readOnly","checked","completed","title","onClick","userId","getUser","fetch","then","response","json","result","data","CurrentUser","state","user","this","props","setState","prevProps","clearUser","email","phone","React","Component","App","todosFromServer","selectedUserId","selectUser","filter","includes","todo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d96dd78.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({\n  todos,\n  getUserId,\n  sortedTodos,\n  filterTodo,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__search\">\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"search\"\n        onChange={({ target }) => filterTodo(target.value)}\n      />\n\n      <select onChange={({ target }) => sortedTodos(target.value)}>\n        <option value=\"all\">All</option>\n        <option value=\"active\">Active</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n    </div>\n\n    <ul className=\"TodoList__list\">\n      {todos.map(elem => (\n        <li key={elem.id} className=\"TodoList__item\">\n          <label>\n            <input type=\"checkbox\" readOnly checked={elem.completed} />\n            {elem.title}\n          </label>\n          <button\n            type=\"button\"\n            onClick={() => getUserId(elem.userId)}\n          >\n            {`User# ${elem.userId}`}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    userId: PropTypes.number,\n  }).isRequired).isRequired,\n  getUserId: PropTypes.func.isRequired,\n  sortedTodos: PropTypes.func.isRequired,\n  filterTodo: PropTypes.func.isRequired,\n};\n","const TODO_API = 'https://mate-api.herokuapp.com/todos';\nconst USERS_API = 'https://mate-api.herokuapp.com/users';\n\nexport const getTodos = () => (\n  fetch(TODO_API)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n\nexport const getUser = userId => (\n  fetch(`${USERS_API}/${userId}`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then(user => this.setState({ user }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    getUser(this.props.userId)\n      .then((user) => {\n        if (user) {\n          this.setState({ user });\n        }\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2>{`Selected user: ${user.id}`}</h2>\n\n        <div>\n          <p>{user.name}</p>\n          <p>{user.email}</p>\n          <p>{user.phone}</p>\n          <button\n            type=\"button\"\n            onClick={clearUser}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todosFromServer: [],\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todo) => {\n        this.setState({\n          todosFromServer: todo.filter(elem => elem.title),\n          todos: todo.filter(elem => elem.title),\n        });\n      });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  filterTodo = (target) => {\n    this.setState(state => ({\n      todos: state.todosFromServer.filter(elem => (elem.title\n        ? elem.title.includes(target)\n        : '')),\n    }));\n  }\n\n  sortedTodos = (target) => {\n    switch (target) {\n      case 'all':\n        this.setState(state => ({\n          todos: state.todosFromServer,\n        }));\n        break;\n      case 'active':\n        this.setState(state => ({\n          todos: state.todosFromServer.filter(elem => !elem.completed),\n        }));\n        break;\n      case 'completed':\n        this.setState(state => ({\n          todos: state.todosFromServer.filter(elem => elem.completed),\n        }));\n        break;\n      default:\n    }\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            getUserId={this.selectUser}\n            sortedTodos={this.sortedTodos}\n            filterTodo={this.filterTodo}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              clearUser={this.clearUser}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}